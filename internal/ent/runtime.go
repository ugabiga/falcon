// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/ugabiga/falcon/internal/ent/authentication"
	"github.com/ugabiga/falcon/internal/ent/schema"
	"github.com/ugabiga/falcon/internal/ent/task"
	"github.com/ugabiga/falcon/internal/ent/taskhistory"
	"github.com/ugabiga/falcon/internal/ent/tradingaccount"
	"github.com/ugabiga/falcon/internal/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authenticationFields := schema.Authentication{}.Fields()
	_ = authenticationFields
	// authenticationDescUserID is the schema descriptor for user_id field.
	authenticationDescUserID := authenticationFields[1].Descriptor()
	// authentication.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	authentication.UserIDValidator = authenticationDescUserID.Validators[0].(func(int) error)
	// authenticationDescUpdatedAt is the schema descriptor for updated_at field.
	authenticationDescUpdatedAt := authenticationFields[5].Descriptor()
	// authentication.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	authentication.DefaultUpdatedAt = authenticationDescUpdatedAt.Default.(func() time.Time)
	// authentication.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	authentication.UpdateDefaultUpdatedAt = authenticationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// authenticationDescCreatedAt is the schema descriptor for created_at field.
	authenticationDescCreatedAt := authenticationFields[6].Descriptor()
	// authentication.DefaultCreatedAt holds the default value on creation for the created_at field.
	authentication.DefaultCreatedAt = authenticationDescCreatedAt.Default.(func() time.Time)
	// authenticationDescID is the schema descriptor for id field.
	authenticationDescID := authenticationFields[0].Descriptor()
	// authentication.IDValidator is a validator for the "id" field. It is called by the builders before save.
	authentication.IDValidator = authenticationDescID.Validators[0].(func(int) error)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescTradingAccountID is the schema descriptor for trading_account_id field.
	taskDescTradingAccountID := taskFields[1].Descriptor()
	// task.TradingAccountIDValidator is a validator for the "trading_account_id" field. It is called by the builders before save.
	task.TradingAccountIDValidator = taskDescTradingAccountID.Validators[0].(func(int) error)
	// taskDescAmount is the schema descriptor for amount field.
	taskDescAmount := taskFields[3].Descriptor()
	// task.DefaultAmount holds the default value on creation for the amount field.
	task.DefaultAmount = taskDescAmount.Default.(float64)
	// taskDescIsActive is the schema descriptor for is_active field.
	taskDescIsActive := taskFields[6].Descriptor()
	// task.DefaultIsActive holds the default value on creation for the is_active field.
	task.DefaultIsActive = taskDescIsActive.Default.(bool)
	// taskDescUpdatedAt is the schema descriptor for updated_at field.
	taskDescUpdatedAt := taskFields[9].Descriptor()
	// task.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	task.DefaultUpdatedAt = taskDescUpdatedAt.Default.(func() time.Time)
	// task.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	task.UpdateDefaultUpdatedAt = taskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskFields[10].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescID is the schema descriptor for id field.
	taskDescID := taskFields[0].Descriptor()
	// task.IDValidator is a validator for the "id" field. It is called by the builders before save.
	task.IDValidator = taskDescID.Validators[0].(func(int) error)
	taskhistoryFields := schema.TaskHistory{}.Fields()
	_ = taskhistoryFields
	// taskhistoryDescTaskID is the schema descriptor for task_id field.
	taskhistoryDescTaskID := taskhistoryFields[1].Descriptor()
	// taskhistory.TaskIDValidator is a validator for the "task_id" field. It is called by the builders before save.
	taskhistory.TaskIDValidator = taskhistoryDescTaskID.Validators[0].(func(int) error)
	// taskhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	taskhistoryDescUpdatedAt := taskhistoryFields[3].Descriptor()
	// taskhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	taskhistory.DefaultUpdatedAt = taskhistoryDescUpdatedAt.Default.(func() time.Time)
	// taskhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	taskhistory.UpdateDefaultUpdatedAt = taskhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskhistoryDescCreatedAt is the schema descriptor for created_at field.
	taskhistoryDescCreatedAt := taskhistoryFields[4].Descriptor()
	// taskhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	taskhistory.DefaultCreatedAt = taskhistoryDescCreatedAt.Default.(func() time.Time)
	// taskhistoryDescID is the schema descriptor for id field.
	taskhistoryDescID := taskhistoryFields[0].Descriptor()
	// taskhistory.IDValidator is a validator for the "id" field. It is called by the builders before save.
	taskhistory.IDValidator = taskhistoryDescID.Validators[0].(func(int) error)
	tradingaccountFields := schema.TradingAccount{}.Fields()
	_ = tradingaccountFields
	// tradingaccountDescUserID is the schema descriptor for user_id field.
	tradingaccountDescUserID := tradingaccountFields[1].Descriptor()
	// tradingaccount.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	tradingaccount.UserIDValidator = tradingaccountDescUserID.Validators[0].(func(int) error)
	// tradingaccountDescUpdatedAt is the schema descriptor for updated_at field.
	tradingaccountDescUpdatedAt := tradingaccountFields[8].Descriptor()
	// tradingaccount.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tradingaccount.DefaultUpdatedAt = tradingaccountDescUpdatedAt.Default.(func() time.Time)
	// tradingaccount.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tradingaccount.UpdateDefaultUpdatedAt = tradingaccountDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tradingaccountDescCreatedAt is the schema descriptor for created_at field.
	tradingaccountDescCreatedAt := tradingaccountFields[9].Descriptor()
	// tradingaccount.DefaultCreatedAt holds the default value on creation for the created_at field.
	tradingaccount.DefaultCreatedAt = tradingaccountDescCreatedAt.Default.(func() time.Time)
	// tradingaccountDescID is the schema descriptor for id field.
	tradingaccountDescID := tradingaccountFields[0].Descriptor()
	// tradingaccount.IDValidator is a validator for the "id" field. It is called by the builders before save.
	tradingaccount.IDValidator = tradingaccountDescID.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[3].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(int) error)
}
