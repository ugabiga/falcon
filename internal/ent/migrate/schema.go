// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthenticationsColumns holds the columns for the "authentications" table.
	AuthenticationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "provider", Type: field.TypeEnum, Enums: []string{"google", "facebook"}},
		{Name: "identifier", Type: field.TypeString, Unique: true},
		{Name: "credential", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// AuthenticationsTable holds the schema information for the "authentications" table.
	AuthenticationsTable = &schema.Table{
		Name:       "authentications",
		Columns:    AuthenticationsColumns,
		PrimaryKey: []*schema.Column{AuthenticationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authentications_users_authentications",
				Columns:    []*schema.Column{AuthenticationsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "cron", Type: field.TypeString},
		{Name: "next_execution_time", Type: field.TypeTime, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "type", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "trading_account_id", Type: field.TypeInt},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tasks_trading_accounts_tasks",
				Columns:    []*schema.Column{TasksColumns[7]},
				RefColumns: []*schema.Column{TradingAccountsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TaskHistoriesColumns holds the columns for the "task_histories" table.
	TaskHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "is_success", Type: field.TypeBool},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "task_id", Type: field.TypeInt},
	}
	// TaskHistoriesTable holds the schema information for the "task_histories" table.
	TaskHistoriesTable = &schema.Table{
		Name:       "task_histories",
		Columns:    TaskHistoriesColumns,
		PrimaryKey: []*schema.Column{TaskHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_histories_tasks_task_histories",
				Columns:    []*schema.Column{TaskHistoriesColumns[4]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TradingAccountsColumns holds the columns for the "trading_accounts" table.
	TradingAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "exchange", Type: field.TypeString},
		{Name: "currency", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString},
		{Name: "identifier", Type: field.TypeString, Unique: true},
		{Name: "credential", Type: field.TypeString},
		{Name: "phrase", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// TradingAccountsTable holds the schema information for the "trading_accounts" table.
	TradingAccountsTable = &schema.Table{
		Name:       "trading_accounts",
		Columns:    TradingAccountsColumns,
		PrimaryKey: []*schema.Column{TradingAccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "trading_accounts_users_trading_accounts",
				Columns:    []*schema.Column{TradingAccountsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "timezone", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthenticationsTable,
		TasksTable,
		TaskHistoriesTable,
		TradingAccountsTable,
		UsersTable,
	}
)

func init() {
	AuthenticationsTable.ForeignKeys[0].RefTable = UsersTable
	TasksTable.ForeignKeys[0].RefTable = TradingAccountsTable
	TaskHistoriesTable.ForeignKeys[0].RefTable = TasksTable
	TradingAccountsTable.ForeignKeys[0].RefTable = UsersTable
}
