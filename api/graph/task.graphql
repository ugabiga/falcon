extend type Query {
    taskIndex(tradingAccountID: ID): TaskIndex
}

extend type Mutation {
    createTask(input: CreateTaskInput!): Task!
    updateTask(id: ID!, input: UpdateTaskInput!): Task!
}

input CreateTaskInput {
    tradingAccountID: ID!
    currency: String!
    size: Float!
    cryptoCurrency: String!
    days: String!
    hours: String!
    type: String!
    params: JSON
}

input UpdateTaskInput {
    currency: String!
    size: Float!
    cryptoCurrency: String!
    days: String!
    hours: String!
    type: String!
    isActive: Boolean!
    params: JSON
}

type TaskIndex{
    selectedTradingAccount: TradingAccount
    tradingAccounts: [TradingAccount!]
}


type Task {
    id: ID!
    tradingAccountID: ID!
    currency: String!
    size: Float!
    cryptoCurrency: String!
    cron: String!
    nextExecutionTime: Time
    isActive: Boolean!
    type: String!
    params: JSON
    updatedAt: Time!
    createdAt: Time!
    tradingAccount: TradingAccount!
    taskHistories: [TaskHistory!]
}

scalar JSON
